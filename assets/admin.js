jQuery(document).ready(function ($) {
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  $("#generate-code-btn").click(function () {
    var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    var code = "";
    for (var i = 0; i < 12; i++) {
      code += characters.charAt(Math.floor(Math.random() * characters.length));
    }
    $('input[name="code"]').val(code);

    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
    $(this).text("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!").prop("disabled", true);
    setTimeout(() => {
      $(this).text("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å").prop("disabled", false);
    }, 1500);
  });

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ
  $('input[name="code"]').on("input", function () {
    var value = $(this)
      .val()
      .toUpperCase()
      .replace(/[^A-Z0-9]/g, "");
    if (value.length > 12) {
      value = value.substring(0, 12);
    }
    $(this).val(value);

    // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    if (value.length === 12) {
      $(this).addClass("valid-code");
    } else {
      $(this).removeClass("valid-code");
    }
  });

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UX
  $('form[onsubmit*="confirm"]').on("submit", function (e) {
    e.preventDefault();

    var form = $(this);
    var action = form.find('input[name="action"]').val();
    var confirmMessage = "";

    switch (action) {
      case "delete_promocode":
        confirmMessage =
          "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.";
        break;
      case "delete_quiz":
        confirmMessage =
          "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫–≤–∏–∑? –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.";
        break;
      case "delete_question":
        confirmMessage =
          "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å? –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.";
        break;
      default:
        confirmMessage = "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ?";
    }

    if (confirm(confirmMessage)) {
      form.off("submit").submit();
    }
  });

  // === –ö–í–ò–ó –†–ï–î–ê–ö–¢–û–† ===

  var answerIndex = 0;

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
  $("#add-answer").click(function () {
    var questionType = $("#question-type").val();
    if (!questionType) {
      alert("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–æ–ø—Ä–æ—Å–∞");
      $("#question-type").focus();
      return;
    }

    var answerHtml = "";
    if (questionType === "checkbox") {
      answerHtml = createTextAnswerHtml(answerIndex);
    } else if (questionType === "image") {
      answerHtml = createImageAnswerHtml(answerIndex);
    }

    var $newAnswer = $(answerHtml);
    $(".answers-list").append($newAnswer);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    $newAnswer.hide().slideDown(300);

    answerIndex++;
    updateAnswerNumbers();
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ HTML –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
  function createTextAnswerHtml(index) {
    return `
            <div class="answer-item" data-index="${index}">
                <label>–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:</label>
                <input type="text" name="answers[${index}][text]" class="regular-text" required placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞">
                <br><br>
                <label style="display: inline-flex; align-items: center; gap: 8px;">
                    <input type="checkbox" name="answers[${index}][is_correct]" value="1">
                    <strong>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç</strong>
                </label>
                <button type="button" class="button remove-answer" style="margin-left: 20px;">–£–¥–∞–ª–∏—Ç—å</button>
            </div>
        `;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ HTML –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
  function createImageAnswerHtml(index) {
    return `
            <div class="answer-item" data-index="${index}">
                <label>–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏:</label>
                <input type="text" name="answers[${index}][text]" class="regular-text" required placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è">
                <br><br>
                <label>URL –∫–∞—Ä—Ç–∏–Ω–∫–∏:</label>
                <div style="display: flex; gap: 10px; align-items: center; margin-bottom: 10px;">
                    <input type="url" name="answers[${index}][image]" class="regular-text" required placeholder="https://example.com/image.jpg">
                    <button type="button" class="button upload-image" data-index="${index}">üì∑ –í—ã–±—Ä–∞—Ç—å</button>
                </div>
                <div class="image-preview" style="margin: 10px 0; min-height: 60px; display: none;">
                    <img src="" style="max-width: 150px; max-height: 100px; border-radius: 4px; border: 1px solid #ddd;">
                </div>
                <label style="display: inline-flex; align-items: center; gap: 8px;">
                    <input type="checkbox" name="answers[${index}][is_correct]" value="1">
                    <strong>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç</strong>
                </label>
                <button type="button" class="button remove-answer" style="margin-left: 20px;">–£–¥–∞–ª–∏—Ç—å</button>
            </div>
        `;
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
  $(document).on("click", ".remove-answer", function () {
    var $answerItem = $(this).closest(".answer-item");
    $answerItem.slideUp(300, function () {
      $(this).remove();
      updateAnswerNumbers();
    });
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
  function updateAnswerNumbers() {
    $(".answer-item").each(function (index) {
      $(this)
        .find("input, button")
        .each(function () {
          var name = $(this).attr("name");
          if (name) {
            $(this).attr("name", name.replace(/\[\d+\]/, "[" + index + "]"));
          }
          var dataIndex = $(this).attr("data-index");
          if (dataIndex !== undefined) {
            $(this).attr("data-index", index);
          }
        });
    });
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ –º–µ–¥–∏–∞—Ç–µ–∫—É WordPress
  $(document).on("click", ".upload-image", function (e) {
    e.preventDefault();

    if (typeof wp === "undefined" || !wp.media) {
      alert("–ú–µ–¥–∏–∞—Ç–µ–∫–∞ WordPress –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞");
      return;
    }

    var button = $(this);
    var index = button.data("index");
    var $answerItem = button.closest(".answer-item");

    var frame = wp.media({
      title: "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞",
      button: {
        text: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
      },
      multiple: false,
      library: {
        type: "image",
      },
    });

    frame.on("select", function () {
      var attachment = frame.state().get("selection").first().toJSON();
      var $imageInput = $answerItem.find('input[name="answers[' + index + '][image]"]');
      var $preview = $answerItem.find(".image-preview");
      var $previewImg = $preview.find("img");

      $imageInput.val(attachment.url);
      $previewImg.attr("src", attachment.url);
      $preview.show();

      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–µ–≤—å—é
      $preview.hide().fadeIn(300);
    });

    frame.open();
  });

  // –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –≤–≤–æ–¥–µ URL
  $(document).on("input", 'input[name*="[image]"]', function () {
    var url = $(this).val();
    var $preview = $(this).closest(".answer-item").find(".image-preview");
    var $img = $preview.find("img");

    if (url && isValidImageUrl(url)) {
      $img.attr("src", url);
      $img
        .on("load", function () {
          $preview.fadeIn(300);
        })
        .on("error", function () {
          $preview.hide();
        });
    } else {
      $preview.hide();
    }
  });

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  function isValidImageUrl(url) {
    return /\.(jpg|jpeg|png|gif|webp|svg)(\?.*)?$/i.test(url);
  }

  // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–∏–ø–∞ –≤–æ–ø—Ä–æ—Å–∞
  $("#question-type").change(function () {
    var $answersList = $(".answers-list");
    if ($answersList.children().length > 0) {
      if (confirm("–ü—Ä–∏ —Å–º–µ–Ω–µ —Ç–∏–ø–∞ –≤–æ–ø—Ä–æ—Å–∞ –≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?")) {
        $answersList.empty();
        answerIndex = 0;
      } else {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        $(this).val($(this).data("prev-value") || "");
      }
    }
    $(this).data("prev-value", $(this).val());
  });

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –≤–æ–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
  $("#question-form").on("submit", function (e) {
    var questionText = $('textarea[name="question_text"]').val().trim();
    var questionType = $("#question-type").val();
    var answers = $(".answer-item").length;
    var correctAnswers = $('.answer-item input[name*="[is_correct]"]:checked').length;

    // –ü—Ä–æ–≤–µ—Ä–∫–∏
    if (!questionText) {
      alert("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞");
      $('textarea[name="question_text"]').focus();
      e.preventDefault();
      return;
    }

    if (!questionType) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–æ–ø—Ä–æ—Å–∞");
      $("#question-type").focus();
      e.preventDefault();
      return;
    }

    if (answers < 2) {
      alert("–î–æ–±–∞–≤—å—Ç–µ –º–∏–Ω–∏–º—É–º 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞");
      e.preventDefault();
      return;
    }

    if (correctAnswers === 0) {
      alert("–û—Ç–º–µ—Ç—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç");
      e.preventDefault();
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ–π
    var isValid = true;
    $(".answer-item").each(function () {
      var $item = $(this);
      var textValue = $item.find('input[name*="[text]"]').val().trim();

      if (!textValue) {
        alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Å —Ç–µ–∫—Å—Ç–æ–º –æ—Ç–≤–µ—Ç–æ–≤");
        $item.find('input[name*="[text]"]').focus();
        isValid = false;
        return false;
      }

      if (questionType === "image") {
        var imageValue = $item.find('input[name*="[image]"]').val().trim();
        if (!imageValue) {
          alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π");
          $item.find('input[name*="[image]"]').focus();
          isValid = false;
          return false;
        }
      }
    });

    if (!isValid) {
      e.preventDefault();
    }
  });

  // –°—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞
  $('textarea[name="question_text"]').on("input", function () {
    var length = $(this).val().length;
    var $counter = $(this).next(".char-counter");

    if ($counter.length === 0) {
      $counter = $(
        '<div class="char-counter" style="font-size: 12px; color: #666; margin-top: 5px;"></div>'
      );
      $(this).after($counter);
    }

    $counter.text(length + " —Å–∏–º–≤–æ–ª–æ–≤");

    if (length > 500) {
      $counter.css("color", "#d63384");
    } else {
      $counter.css("color", "#666");
    }
  });

  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –≤ –±—É–¥—É—â–µ–º)
  var autoSaveTimer;
  $("#question-form input, #question-form textarea, #question-form select").on(
    "input change",
    function () {
      clearTimeout(autoSaveTimer);
      autoSaveTimer = setTimeout(function () {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        console.log("–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...");
      }, 5000);
    }
  );

  // –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  function showTooltip(element, message) {
    var $tooltip = $('<div class="admin-tooltip">' + message + "</div>");
    $tooltip.css({
      position: "absolute",
      background: "#333",
      color: "white",
      padding: "8px 12px",
      borderRadius: "4px",
      fontSize: "12px",
      zIndex: 9999,
      maxWidth: "200px",
    });

    $("body").append($tooltip);

    var offset = $(element).offset();
    $tooltip.css({
      top: offset.top - $tooltip.outerHeight() - 5,
      left: offset.left + $(element).outerWidth() / 2 - $tooltip.outerWidth() / 2,
    });

    setTimeout(function () {
      $tooltip.fadeOut(300, function () {
        $(this).remove();
      });
    }, 3000);
  }

  // –£–ª—É—á—à–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  function showNotification(message, type = "success") {
    var $notification = $('<div class="admin-notification ' + type + '">' + message + "</div>");
    $notification.css({
      position: "fixed",
      top: "50px",
      right: "20px",
      background: type === "success" ? "#00a32a" : "#d63384",
      color: "white",
      padding: "15px 20px",
      borderRadius: "6px",
      zIndex: 10000,
      boxShadow: "0 4px 15px rgba(0,0,0,0.2)",
      transform: "translateX(100%)",
      transition: "transform 0.3s ease",
    });

    $("body").append($notification);

    setTimeout(function () {
      $notification.css("transform", "translateX(0)");
    }, 100);

    setTimeout(function () {
      $notification.css("transform", "translateX(100%)");
      setTimeout(function () {
        $notification.remove();
      }, 300);
    }, 4000);
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
  $("[title]").hover(function () {
    var title = $(this).attr("title");
    if (title) {
      showTooltip(this, title);
      $(this).removeAttr("title").data("original-title", title);
    }
  });

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  $("<style>")
    .prop("type", "text/css")
    .html(
      `
            .valid-code {
                border-color: #00a32a !important;
                box-shadow: 0 0 0 3px rgba(0, 163, 42, 0.1) !important;
            }
            .answer-item {
                position: relative;
            }
            .answer-item:before {
                content: counter(answer-counter);
                counter-increment: answer-counter;
                position: absolute;
                top: -10px;
                left: -10px;
                background: #0073aa;
                color: white;
                width: 24px;
                height: 24px;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 12px;
                font-weight: bold;
            }
            .answers-list {
                counter-reset: answer-counter;
            }
        `
    )
    .appendTo("head");

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  $('input[name="code"]').trigger("input");
});
